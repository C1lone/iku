_G.configuration = {
    host = 'ztdoor', -- username or displayname or userid
    prefix = ';',
    setups = {
        ['bank'] = 'https://raw.githubusercontent.com/polarsblade/setups/main/bank',
        ['club'] = 'https://raw.githubusercontent.com/polarsblade/setups/main/club',
    },
    altaccounts = {
        5327703090,
        5327703217,
        5327703208,
        5327703556,
        5327703640,
        5327703735,
        5327704066,
        5538815339,
        3718045446,
        3718041567,
        3718039351,
        3718037805,
        3718031255,
        3718028682,
        3718019947,
        5327702870,
        5538357489,
        3717988286,
        3718046979,
        3718049045,
        3718058329,
        3718061120,
        3719084596,
        3717990516,
        3719087676,
        3719091389,
        3719094992,
        3719095974,
        3717992314,
        3717994572,
        3718013439,
        502075313,
        5327703158,
    }
}

local players = game.Players
local localplayer = players.LocalPlayer
local mainevent = game.ReplicatedStorage:WaitForChild('MainEvent')

local variables = {
    dropcash = false,
    underground = false,
    airlock = false,
    setuppoint = Vector3.new(0, 0, 0),
    setup = Vector3.new(0, 0, 0),
    unload = false,
}

local function listen(player)
    player.Chatted:Connect(function(message)
        if variables.unload == true then return end
        repeat task.wait() until localplayer.Character
        repeat task.wait() until localplayer.Character:FindFirstChild('FULLY_LOADED_CHAR')

        local splitmessage = string.split(string.lower(message), ' ')
        local command = splitmessage[1]
        local argument = splitmessage[2]

        if command == _G.configuration.prefix..'unload' then
            variables.unload = true
        end

        if command == _G.configuration.prefix..'dropcash' then
            if argument == 'on' then
                variables.dropcash = true

                repeat
                    task.wait()
                    mainevent:FireServer('DropMoney', '10000')
                until variables.dropcash == false or variables.unload == true
            elseif argument == 'off' then
                variables.dropcash = false
            end
        end

        if command == _G.configuration.prefix..'underground' then
            if argument == 'on' then
                variables.underground = true
                variables.setup = variables.setuppoint - Vector3.new(0, 6, 0)
            elseif argument == 'off' then
                variables.underground = false
                variables.setup = variables.setuppoint
            end
        end

        if command == _G.configuration.prefix..'airlock' then
            if argument == 'on' then
                variables.airlock = true
                variables.setup = variables.setuppoint + Vector3.new(0, 6, 0)
            elseif argument == 'off' then
                variables.airlock = false
                variables.setup = variables.setuppoint
            end
        end

        if command == _G.configuration.prefix..'setup' then
            for name, link in pairs(_G.configuration.setups) do
                if argument == name then
                    local positions = game:GetService('HttpService'):JSONDecode(game:HttpGet(link))
                    
                    local tableposition = 1
                    if table.find(_G.configuration.altaccounts, localplayer.Name) then
                        tableposition = table.find(_G.configuration.altaccounts, localplayer.Name)
                    elseif table.find(_G.configuration.altaccounts, localplayer.DisplayName) then
                        tableposition = table.find(_G.configuration.altaccounts, localplayer.DisplayName)
                    elseif table.find(_G.configuration.altaccounts, localplayer.UserId) then
                        tableposition = table.find(_G.configuration.altaccounts, localplayer.UserId)
                    end

                    variables.setup = CFrame.new(positions[tableposition]:match('(.+), (.+), (.+)'))
                    variables.setuppoint = CFrame.new(positions[tableposition]:match('(.+), (.+), (.+)'))
                
                    return
                end
            end

            variables.setup = CFrame.new(0, 0, 0)
            variables.setuppoint = CFrame.new(0, 0, 0)
        end
    end)

    repeat
        task.wait()

        pcall(function()
            localplayer.Character.HumanoidRootPart.CFrame = variables.setup
            localplayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
        end)
    until variables.unload == true
end

players.PlayerAdded:Connect(function(player)
    if typeof(_G.configuration.host) == 'string' then
        if player.Name == _G.configuration.host or player.DisplayName == _G.configuration.host then
            listen(player)
        end
    elseif typeof(_G.configuration.host) == 'number' then
        if player.UserId == _G.configuration.host then
            listen(player)
        end
    else
        localplayer:Kick('incorrect hostname type')
    end
end)

for _, player in ipairs(players:GetPlayers()) do
    if typeof(_G.configuration.host) == 'string' then
        if player.Name == _G.configuration.host or player.DisplayName == _G.configuration.host then
            listen(player)
        end
    elseif typeof(_G.configuration.host) == 'number' then
        if player.UserId == _G.configuration.host then
            listen(player)
        end
    else
        localplayer:Kick('incorrect hostname type')
    end
end
